{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "baseUrl": {
            "type": "string",
            "metadata": {
                "description": "Base URL for Resource and Shared Templates"
            }
        },
        "pip-settings": {
            "type": "object",
            "metadata": {
                "description": "These are settings for the Public IP Address"
            }
        },
        "storage-settings": {
            "type": "object",
            "metadata": {
                "description": "These are settings for the Storage Account"
            }
        },
        "vm-settings": {
            "type": "object",
            "metadata": {
                "description": "These are settings for the Virtual Machine"
            }
        },
        "vnet-settings": {
            "type": "object",
            "metadata": {
                "description": "These are settings for the Virtual Network"
            }
        }
    },
    "variables": {
        "dscScriptsFolder": "dsc-scripts/master",
        "resourcesFolder": "resources/master",
        "dscScriptsUrl": "[concat(parameters('baseUrl'), variables('dscScriptsFolder'))]",
        "resourcesUrl": "[concat(parameters('baseUrl'), variables('resourcesFolder'))]",
        "diagTemplate": "[concat(variables('resourcesUrl'), '/', 'extn-diag.template.json')]",
        "dscTemplate": "[concat(variables('resourcesUrl'), '/', 'extn-dsc.template.json')]",
        "scriptTemplate": "[concat(variables('resourcesUrl'), '/', 'extn-script.template.json')]",
        "lbTemplate": "[concat(variables('resourcesUrl'), '/', 'lb.template.json')]",
        "nicTemplate": "[concat(variables('resourcesUrl'), '/', 'nic.template.json')]",
        "nsgTemplate": "[concat(variables('resourcesUrl'), '/', 'nsg.template.json')]",
        "pipTemplate": "[concat(variables('resourcesUrl'), '/pip-', parameters('pip-settings').newOrExisting, '.template.json')]",
        "sharedTemplate": "[concat(variables('resourcesUrl'), '/', 'shared-resources.json')]",
        "storageTemplate": "[concat(variables('resourcesUrl'), '/storage-', parameters('storage-settings').newOrExisting, '.template.json')]",
        "avsName": "web-avs",
        "lbBackendPoolID": "[concat(variables('lbID'),'/backendAddressPools/', variables('lbBackendPoolName'))]",
        "lbBackendPoolName": "lb-backEnd-http",
        "lbBackendPort": [
            [ 3389 ],
            [ 22 ]
        ],
        "lbFrontendPoolID": "[concat(variables('lbID'),'/frontendIPConfigurations/', variables('lbFrontendPoolName'))]",
        "lbFrontendPoolName": "lb-frontEnd",
        "lbID": "[resourceId('Microsoft.Network/loadBalancers', variables('lbName'))]",
        "lbName": "web-lb",
        "lbProbeID": "[concat(variables('lbID'),'/probes/', variables('lbProbeName'))]",
        "lbProbeName": "http-probe",
        "lbRuleName": "lb-rule-http",
        "math": {
            "modulo2": [ 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1 ],
            "modulo3": [ 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2 ]
        },
        "nicNamePrefix": "web-nic-",
        "nsgID": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName'))]",
        "nsgName": "web-nsg",
        "pipName": "web-pip",
        "vmCount": "[parameters('vm-settings').count]",
        "vmNamePrefix": "web-vm-",
        "vmOS": [
            [ "MicrosoftWindowsServer", "WindowsServer", "2016-Datacenter", "windows" ],
            [ "Canonical", "UbuntuServer", "16.04-LTS", "linux" ]
        ],
        "vmDiag": [
            [ "iaas-diagnostic", "Microsoft.Azure.Diagnostics", "IaaSDiagnostics", "1.8" ],
            [ "linux-diagnostic", "Microsoft.OSTCExtensions", "LinuxDiagnostic", "2.3" ]
        ],
        "vmDscScript": [
            [ "dsc-iis", "Microsoft.Powershell", "DSC", "2.9", "[variables('dscTemplate')]", "[variables('dscScriptsUrl')]", "iis-on-windows-vm", "iis-config-dsc", "Main" ],
            [ "script-apache", "Microsoft.Azure.Extensions", "CustomScript", "2.0", "[variables('scriptTemplate')]", "[variables('dscScriptsUrl')]", "apache2-on-ubuntu-vm", "install_apache.sh", null ]
        ],
        "vmTemplate": "[concat(variables('resourcesUrl'), '/vm-', variables('vmOS')[parameters('vm-settings').type][3], '.template.json')]"
    },
    "resources": [
        {
            "name": "shared-resources",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2016-09-01",
            "dependsOn": [],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('sharedTemplate')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "storage-settings": {
                        "value": {
                            "accounts": "[parameters('storage-settings').accounts]",
                            "count": "[length(parameters('storage-settings').accounts)]",
                            "accountType": "Standard_LRS",
                            "newOrExisting": "[parameters('storage-settings').newOrExisting]",
                            "existingRg": "[parameters('storage-settings').existingRg]"
                        }
                    },
                    "vnet-settings": {
                        "value": {
                            "name": "[parameters('vnet-settings').name]",
                            "newOrExisting": "[parameters('vnet-settings').newOrExisting]",
                            "existingRg": "[parameters('vnet-settings').existingRg]",
                            "prefix": "[parameters('vnet-settings').prefix]",
                            "subnets": [
                                {
                                    "name": "[parameters('vnet-settings').subnets.subnet0Name]",
                                    "properties": {
                                        "addressPrefix": "[parameters('vnet-settings').subnets.subnet0Prefix]"
                                    }
                                }
                            ],
                            "dnsSettings": []
                        }
                    },
                    "avs-settings": {
                        "value": {
                            "name": "[variables('avsName')]",
                            "updateCount": 5,
                            "faultCount": 3
                        }
                    },
                    "resourcesUrl": {
                        "value": "[variables('resourcesUrl')]"
                    }
                }
            }
        },
        {
            "name": "public-ip",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2016-09-01",
            "dependsOn": [],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('pipTemplate')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "pip-settings": {
                        "value": {
                            "name": "[variables('pipName')]",
                            "dnsName": "[parameters('pip-settings').dnsName]",
                            "publicIPAllocationMethod": "Dynamic"
                        }
                    }
                }
            }
        },
        {
            "name": "load-balancer",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2016-09-01",
            "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'public-ip')]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('lbTemplate')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "lb-settings": {
                        "value": {
                            "name": "[variables('lbName')]",
                            "count": "[variables('vmCount')]",
                            "backendPort": "[variables('lbBackendPort')[parameters('vm-settings').type][0]]",
                            "frontendIPConfigurations": [
                                {
                                    "name": "[variables('lbFrontendPoolName')]",
                                    "properties": {
                                        "privateIPAllocationMethod": "Dynamic",
                                        "publicIPAddress": {
                                            "id": "[reference('public-ip').outputs.pipID.value]"
                                        }
                                    }
                                }
                            ],
                            "backendAddressPools": [
                                {
                                    "name": "[variables('lbBackendPoolName')]"
                                }
                            ],
                            "loadBalancingRules": [
                                {
                                    "name": "[variables('lbRuleName')]",
                                    "properties": {
                                        "frontendIPConfiguration": {
                                            "id": "[variables('lbFrontendPoolID')]"
                                        },
                                        "frontendPort": 80,
                                        "backendPort": 80,
                                        "enableFloatingIP": false,
                                        "idleTimeoutInMinutes": 4,
                                        "protocol": "Tcp",
                                        "loadDistribution": "SourceIPProtocol",
                                        "backendAddressPool": {
                                            "id": "[variables('lbBackendPoolID')]"
                                        },
                                        "probe": {
                                            "id": "[variables('lbProbeID')]"
                                        }
                                    }
                                }
                            ],
                            "probes": [
                                {
                                    "name": "[variables('lbProbeName')]",
                                    "properties": {
                                        "protocol": "Http",
                                        "port": 80,
                                        "requestPath": "/",
                                        "intervalInSeconds": 5,
                                        "numberOfProbes": 2
                                    }
                                }
                            ],
                            "inboundNatRules": [],
                            "outboundNatRules": [],
                            "inboundNatPools": []
                        }
                    }
                }
            }
        },
        {
            "name": "network-security-group",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2016-09-01",
            "dependsOn": [],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('nsgTemplate')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "nsg-settings": {
                        "value": {
                            "name": "[variables('nsgName')]",
                            "securityRules": [
                                {
                                    "name": "http-allow",
                                    "properties": {
                                        "direction": "Inbound",
                                        "protocol": "TCP",
                                        "sourceAddressPrefix": "*",
                                        "sourcePortRange": "*",
                                        "destinationAddressPrefix": "[parameters('vnet-settings').prefix]",
                                        "destinationPortRange": "80",
                                        "access": "Allow",
                                        "priority": 110
                                    }
                                },
                                {
                                    "name": "rdp-allow",
                                    "properties": {
                                        "direction": "Inbound",
                                        "protocol": "TCP",
                                        "sourceAddressPrefix": "*",
                                        "sourcePortRange": "33890-33891",
                                        "destinationAddressPrefix": "[parameters('vnet-settings').prefix]",
                                        "destinationPortRange": "3389",
                                        "access": "Allow",
                                        "priority": 120
                                    }
                                },
                                {
                                    "name": "vnet-deny",
                                    "properties": {
                                        "direction": "Inbound",
                                        "protocol": "*",
                                        "sourceAddressPrefix": "*",
                                        "sourcePortRange": "*",
                                        "destinationAddressPrefix": "*",
                                        "destinationPortRange": "*",
                                        "access": "Deny",
                                        "priority": 200
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        {
            "name": "[concat('network-interface-', copyindex())]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2016-09-01",
            "copy": {
                "name": "nicLoop",
                "count": "[variables('vmCount')]"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'shared-resources')]",
                "[resourceId('Microsoft.Resources/deployments', 'network-security-group')]",
                "[resourceId('Microsoft.Resources/deployments', 'load-balancer')]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('nicTemplate')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "nic-settings": {
                        "value": {
                            "name": "[concat(variables('nicNamePrefix'), copyindex())]",
                            "ipConfigurations": [
                                {
                                    "name": "ipconfig1",
                                    "properties": {
                                        "privateIPAllocationMethod": "Dynamic",
                                        "subnet": {
                                            "id": "[concat(reference('shared-resources').outputs.vnetID.value, '/subnets/', parameters('vnet-settings').subnets.subnet0Name)]"
                                        },
                                        "loadBalancerBackendAddressPools": [
                                            {
                                                "id": "[variables('lbBackendPoolID')]"
                                            }
                                        ],
                                        "loadBalancerInboundNatRules": [
                                            {
                                                "id": "[concat(variables('lbID'), '/inboundNatRules/nat-rdp-vm', copyIndex())]"
                                            }
                                        ]
                                    }
                                }
                            ],
                            "dnsSettings": {
                                "dnsServers": []
                            },
                            "enableIPForwarding": false,
                            "networkSecurityGroup": {
                                "id": "[variables('nsgID')]"
                            }
                        }
                    }
                }
            }
        },
        {
            "name": "[concat('virtual-machine-', copyindex())]",
            "copy": {
                "name": "vmLoop",
                "count": "[variables('vmCount')]"
            },
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2016-09-01",
            "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'shared-resources')]",
                "[resourceId('Microsoft.Resources/deployments', concat('network-interface-', copyindex()))]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('vmTemplate')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "storage-settings": {
                        "value": {
                            "name": "[parameters('storage-settings').accounts[variables('math').modulo2[copyIndex()]]]",
                            "newOrExisting": "[parameters('storage-settings').newOrExisting]",
                            "existingRg": "[parameters('storage-settings').existingRg]"
                        }
                    },
                    "vm-settings": {
                        "value": {
                            "name": "[concat(variables('vmNamePrefix'), copyindex())]",
                            "adminUserName": "[parameters('vm-settings').adminUserName]",
                            "adminPassword": "[parameters('vm-settings').adminPassword]",
                            "avsID": "[reference('shared-resources').outputs.avsID.value]",
                            "imagePublisher": "[variables('vmOS')[parameters('vm-settings').type][0]]",
                            "imageOffer": "[variables('vmOS')[parameters('vm-settings').type][1]]",
                            "imageSku": "[variables('vmOS')[parameters('vm-settings').type][2]]",
                            "nicID": "[reference(concat('network-interface-', copyindex())).outputs.nicID.value]",
                            "vmSize": "Standard_D2_v2",
                            "storageAccountContainerName": "[toLower(concat(resourceGroup().name, '-', uniqueString(resourceGroup().id, deployment().name)))]"
                        }
                    }
                }
            }
        },
        {
            "name": "diagnostic-storage",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2016-09-01",
            "dependsOn": [],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('storageTemplate')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "storage-settings": {
                        "value": {
                            "name": "[parameters('storage-settings').diagnostic]",
                            "newOrExisting": "[parameters('storage-settings').newOrExisting]",
                            "existingRg": "[parameters('storage-settings').existingRg]"
                        }
                    }
                }
            }
        },
        {
            "name": "[concat('diagnostic-extension', copyindex())]",
            "copy": {
                "name": "diagLoop",
                "count": "[variables('vmCount')]"
            },
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2016-09-01",
            "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', concat('virtual-machine-', copyindex()))]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('diagTemplate')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "extn-settings": {
                        "value": {
                            "name": "[variables('vmDiag')[parameters('vm-settings').type][0]]",
                            "publisher": "[variables('vmDiag')[parameters('vm-settings').type][1]]",
                            "type": "[variables('vmDiag')[parameters('vm-settings').type][2]]",
                            "typeHandlerVersion": "[variables('vmDiag')[parameters('vm-settings').type][3]]",
                            "storageName": "[parameters('storage-settings').diagnostic]",
                            "storageID": "[reference('diagnostic-storage').outputs.storageAccountId.value]",
                            "vmName": "[concat(variables('vmNamePrefix'), copyindex())]"
                        }
                    }
                }
            }
        },
        {
            "name": "[concat('dscScript-extension', copyindex())]",
            "copy": {
                "name": "dscScriptLoop",
                "count": "[variables('vmCount')]"
            },
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2016-09-01",
            "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', concat('virtual-machine-', copyindex()))]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('vmDscScript')[parameters('vm-settings').type][4]]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "extn-settings": {
                        "value": {
                            "name": "[variables('vmDscScript')[parameters('vm-settings').type][0]]",
                            "publisher": "[variables('vmDscScript')[parameters('vm-settings').type][1]]",
                            "type": "[variables('vmDscScript')[parameters('vm-settings').type][2]]",
                            "typeHandlerVersion": "[variables('vmDscScript')[parameters('vm-settings').type][3]]",
                            "vmName": "[concat(variables('vmNamePrefix'), copyindex())]",
                            "url": "[variables('vmDscScript')[parameters('vm-settings').type][5]]",
                            "folder": "[variables('vmDscScript')[parameters('vm-settings').type][6]]",
                            "file": "[variables('vmDscScript')[parameters('vm-settings').type][7]]",
                            "function": "[variables('vmDscScript')[parameters('vm-settings').type][8]]"
                        }
                    }
                }
            }
        }
    ],
    "outputs": {}
}
